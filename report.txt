TensorFlow 2.0 Upgrade Script
-----------------------------
Converted 1 files
Detected 9 issues that require attention
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
File: ./infer/onset_net.py
--------------------------------------------------------------------------------
./infer/onset_net.py:82:30: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
./infer/onset_net.py:83:29: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
./infer/onset_net.py:125:29: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
./infer/onset_net.py:126:29: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
./infer/onset_net.py:176:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
./infer/onset_net.py:177:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
./infer/onset_net.py:200:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
./infer/onset_net.py:201:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
./infer/onset_net.py:236:86: ERROR: Using member tf.contrib.framework.get_or_create_global_step in deprecated module tf.contrib. tf.contrib.framework.get_or_create_global_step cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
================================================================================
Detailed log follows:

================================================================================
--------------------------------------------------------------------------------
Processing file './infer/onset_net.py'
 outputting to './infer/onset_net.py'
--------------------------------------------------------------------------------

54:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
55:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
60:30: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
81:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
82:30: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
82:30: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
83:29: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
83:29: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
83:76: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
83:76: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
89:23: INFO: Added keywords to args of function 'tf.nn.conv2d'
89:23: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
94:25: INFO: Added keywords to args of function 'tf.nn.max_pool'
94:25: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
94:25: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
124:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
125:29: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
125:29: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
126:29: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
126:29: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
126:74: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
126:74: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
134:26: INFO: Renamed 'tf.nn.rnn_cell.BasicRNNCell' to 'tf.compat.v1.nn.rnn_cell.BasicRNNCell'
136:26: INFO: Renamed 'tf.nn.rnn_cell.GRUCell' to 'tf.compat.v1.nn.rnn_cell.GRUCell'
138:26: INFO: Renamed 'tf.nn.rnn_cell.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
144:23: INFO: Renamed 'tf.nn.rnn_cell.DropoutWrapper' to 'tf.compat.v1.nn.rnn_cell.DropoutWrapper'
147:23: INFO: Renamed 'tf.nn.rnn_cell.MultiRNNCell' to 'tf.compat.v1.nn.rnn_cell.MultiRNNCell'
153:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
158:24: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
175:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
176:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
176:28: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
177:28: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
177:28: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
177:81: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
177:81: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
189:33: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

199:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
200:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
200:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
200:83: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
200:83: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
201:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
201:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
201:66: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
201:66: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
202:85: INFO: Renamed keyword argument for tf.squeeze from squeeze_dims to axis
205:99: INFO: Renamed keyword argument for tf.squeeze from squeeze_dims to axis
224:31: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
226:20: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
232:28: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
236:86: ERROR: Using member tf.contrib.framework.get_or_create_global_step in deprecated module tf.contrib. tf.contrib.framework.get_or_create_global_step cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
265:17: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
--------------------------------------------------------------------------------

